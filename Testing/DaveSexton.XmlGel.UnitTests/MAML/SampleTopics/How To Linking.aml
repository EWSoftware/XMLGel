<?xml version="1.0" encoding="utf-8"?>
<topic id="4ff60dc7-66a0-44a7-a3f5-6acaefc0cdcd" revisionNumber="0">
  <developerHowToDocument xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
    <introduction>
      <para>
        This topic explains various styles of linking in MAML topics.
      </para>
    </introduction>
    <section>
      <title>Linking in MAML</title>
      <content>
        <para>
          MAML provides the ability to link to external URIs and between conceptual 
          and reference topics using three different elements: <codeInline>link</codeInline>, 
          <codeInline>codeEntityReference</codeInline> and <codeInline>externalLink</codeInline>.
        </para>
        <procedure>
          <title>Linking to other conceptual topics:</title>
          <steps class="ordered">
            <step>
              <content>
                <para>Find the GUID for the topic to which you want to link.</para>
                <alert class="tip">
                  <para>
                    Conceptual topic file names consist of a GUID with an .xml extension.
                  </para>
                </alert>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Use the <codeInline>link</codeInline> element with an XLink 
                  <codeInline>href</codeInline> that specifies the GUID of the 
                  target topic, as in the following example.
                </para>
                <code language="xml"><![CDATA[<link xlink:href="E46292B8-1332-4ef0-9D78-B8D3BBACA479"/>]]></code>
                <alert class="note">
                  <para>
                    Do not use an .xml extension when specifying a topic GUID in the <codeInline>href</codeInline>
                    attribute.
                  </para>
                </alert>
                <para>
                  The previous example will generate a hyperlink to the topic with the
                  specified GUID.  The topic's title will automatically be used as the
                  text for the hyperlink.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Linking to auto-generated reference topics:</title>
          <steps class="ordered">
            <step>
              <content>
                <para>Find the reference ID for the API to which you want to link.</para>
                <alert class="tip">
                  <para>
                    The appropriate ID can be found in the reflection file that is 
                    generated by the <application>MRefBuilder</application> program
                    or the XML documentation file that is generated by the code compiler.
                    A valid ID starts with an identifier such as M:, T:, F:, P:, E: or N:
                    and then specifies the full API name, including the namespace, type,
                    member and parenthesis with comma-separated parameter types, when
                    appropriate.
                  </para>
                </alert>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Use the <codeInline>codeEntityReference</codeInline> element, as in the 
                  following example.
                </para>
                <code language="xml"><![CDATA[
  <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
  <codeEntityReference>N:MyNamespace</codeEntityReference>
  <codeEntityReference>M:System.IO.File.Exists(System.String)</codeEntityReference>]]></code>
                <para>
                  The previous example will generate three hyperlinks.  The first link will
                  be to the topic that Sandcastle generates for the 
                  <codeInline>MyNamespace.MyClass</codeInline> class.  The second link will
                  be to the topic that Sandcastle generates for the 
                  <codeInline>MyNamespace</codeInline> namespace.  The third link will 
                  be to the topic for the <codeInline>File.Exists</codeInline> method in the
                  .NET Framework documentation on MSDN.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Linking to external resources:</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use the <codeInline>externalLink</codeInline> element to link to 
                  an external resources, as in the following example.
                </para>
                <code language="xml"><![CDATA[
  <externalLink>
    <linkText>Sandcastle Styles</linkText>
    <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
    <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
  </externalLink>]]></code>
                <para>
                  The previous example will generate a hyperlink to the Sandcastle Styles
                  project on CodePlex.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>
    <relatedTopics>
      <externalLink>
        <linkText>Sandcastle</linkText>
        <linkAlternateText>Sandcastle on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/Sandcastle</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>
    </relatedTopics>
  </developerHowToDocument>
</topic>